id: template_chat_flow
name: Template Chat Flow
environment:
  python_requirements_txt: requirements.txt
inputs:
  chat_history:
    type: list
    default: []
    is_chat_input: false
    is_chat_history: true
  query:
    type: string
    default: Who can troubleshoot FWA?
    is_chat_input: true
    is_chat_history: false
outputs:
  reply:
    type: string
    reference: ${DetermineReply.output}
    is_chat_output: true
  search_intents:
    type: string
    reference: ${ExtractIntent.output.search_intents}
    is_chat_output: false
  fetched_docs:
    type: string
    reference: ${FormatRetrievedDocuments.output}
    is_chat_output: false
  current_query_intent:
    type: string
    reference: ${ExtractIntent.output.current_message_intent}
    is_chat_output: false
nodes:
- name: DetermineIntent
  type: llm
  source:
    type: code
    path: DetermineIntent.jinja2
  inputs:
    deployment_name: gpt-35-turbo
    temperature: 0
    top_p: 1
    max_tokens: 800
    presence_penalty: 0
    frequency_penalty: 0
    chat_history: ${inputs.chat_history}
    query: ${inputs.query}
  connection: open_ai_connection
  api: chat
  use_variants: false
- name: ExtractIntent
  type: python
  source:
    type: code
    path: ExtractIntent.py
  inputs:
    input: ${DetermineIntent.output}
    query: ${inputs.query}
  use_variants: false
- name: RetrieveDocuments
  type: python
  source:
    type: code
    path: RetrieveDocuments.py
  inputs:
    embeddingModelConnection: open_ai_connection
    embeddingModelName: text-embedding-ada-002
    indexName: vbg-index-summaries-v2
    queries: ${ExtractIntent.output.search_intents}
    queryType: vectorSemanticHybrid
    searchConnection: aisearch
    semanticConfiguration: vzw-semantic-config
    topK: 5
    vectorFields: contentVector, contentSummary
  use_variants: false
- name: FormatRetrievedDocuments
  type: python
  source:
    type: code
    path: FormatRetrievedDocuments.py
  inputs:
    docs: ${RetrieveDocuments.output}
    maxTokens: 30000
  use_variants: false
- name: FormatConversation
  type: python
  source:
    type: code
    path: FormatConversation.py
  inputs:
    history: ${inputs.chat_history}
    maxTokens: 1500
  use_variants: false
- name: DetermineReply
  type: llm
  source:
    type: code
    path: DetermineReply__variant_1.jinja2
  inputs:
    deployment_name: diaz-gpt-model
    temperature: 0
    top_p: 1
    max_tokens: 800
    presence_penalty: 0
    frequency_penalty: 0
    conversation: ${FormatConversation.output}
    documentation: ${FormatRetrievedDocuments.output}
    user_query: ${ExtractIntent.output.current_message_intent}
  connection: open_ai_connection
  api: chat
